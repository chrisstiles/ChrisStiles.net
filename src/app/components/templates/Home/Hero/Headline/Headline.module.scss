/* --------------------------- */
/* Headline */
/* --------------------------- */

@use 'app';

$initialFontSize: 54px;
$largeFontSize: 69px;
$skew: -3.5deg;
$transitionDuration: 0.3s;

.headline {
  font-weight: 700;
  font-size: $initialFontSize;
  line-height: 1;
  transition: {
    duration: $transitionDuration;
    property: transform, font-size;
    timing-function: ease;
  }
  position: relative;
  display: inline-block;
  font-feature-settings: normal;
  will-change: transform, font-size;

  em {
    font-style: normal;
    will-change: color;
  }

  &.selectEmphasis {
    em {
      background-color: var(--highlight-dark-color);
    }
  }

  &.bold {
    font-weight: 800;
  }

  &.alternateGlyphs {
    font-feature-settings: 'salt', 'calt';
  }

  &.grow {
    font-size: $largeFontSize;
  }

  &.skew {
    transform-origin: top right;
    transform: skewY($skew);
  }

  &.uppercase {
    text-transform: uppercase;
  }

  &.showColor {
    em {
      color: var(--yellow-accent-color);
    }
  }

  strong {
    position: relative;
    transition: color 0.3s;
    font-weight: inherit;
  }
}

$boxInitialScale: 0;
$boxEnterTransition: transform 0.35s cubic-bezier(0.47, 0.01, 0.16, 1);

.box {
  $offset: -12px;
  position: absolute;
  top: $offset + 3px;
  right: $offset;
  bottom: $offset - 3px;
  left: $offset;
  border: 1px solid #2aa5fc;
  pointer-events: none;

  &.hidden {
    opacity: 0;
    transition: opacity 0.4s;
    transition-delay: 0.8s;
  }

  @at-root .headline.empty {
    width: 0.6em;
    height: 1em;

    .box {
      transform-origin: top left;
      transition: $boxEnterTransition, opacity 0.2s ease;
      transition-delay: 0s;

      &.hidden {
        transform: scale($boxInitialScale);
        opacity: 0;
      }
    }
  }

  @at-root .uppercase & {
    bottom: $offset + 4px;
  }
}

.handle {
  $size: 10px;
  $offset: -$size / 2;
  position: absolute;
  width: $size;
  height: $size;
  background-color: var(--page-background-color);
  border: 1px solid #2aa5fc;
  transition: transform $transitionDuration;

  &:nth-child(1) {
    top: $offset;
    left: $offset;
  }

  &:nth-child(2) {
    top: $offset;
    right: $offset;
  }

  &:nth-child(3) {
    bottom: $offset;
    right: $offset;
  }

  &:nth-child(4) {
    bottom: $offset;
    left: $offset;
  }

  @at-root .skew & {
    transform: skewY(-$skew);
  }
}
