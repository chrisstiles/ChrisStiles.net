/* --------------------------- */
/* Grid Lines */
/* --------------------------- */

@use 'app';

.wrapper {
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  min-height: 100%;
  right: 0;
  overflow: hidden;
  z-index: -2;
  pointer-events: none;
  display: flex;
  justify-content: center;
}

.linesWrapper {
  display: flex;
  width: 100%;
  height: 100%;
}

.grid {
  display: flex;
  width: var(--grid-width);
  margin-left: calc(var(--grid-offset) * -1);
  flex: none;
}

.line {
  flex-grow: 1;
  display: flex;
  justify-content: flex-end;
  position: relative;

  svg {
    width: 1px;
    height: 100%;
  }

  .solid {
    margin-right: auto;
  }
}

.subLine {
  --color: var(--sub-line-color, var(--grid-line-color));

  position: absolute;
  inset: 0 0 0 50%;
  margin-left: -1px;

  line {
    stroke: var(--color);
  }
}

.divider {
  position: relative;
  height: 2.5px;
  width: 100%;
  pointer-events: none;
}

.barWrapper {
  position: absolute;
  inset: 0 auto 0 0;
  width: calc(min(var(--content-width), 100vw) - var(--content-padding) * 2);
}

.barSpacer {
  position: absolute;
  inset: 0 calc(var(--grid-offset) * -1);
}

:export {
  maxGridCols: app.$maxGridCols;
}

/* --------------------------- */
/* Grid Divider */

.bar {
  --circle-size: 8px;

  position: absolute;
  color: var(--grid-line-color);
  display: block;
  inset: 0;
  padding: 0 7px;
  height: 2px;

  &:before {
    content: '';
    display: block;
    width: 100%;
    height: 100%;
    background-color: currentColor;
  }

  @include app.retina {
    --circle-size: 7px;

    height: 2.5px;
  }
}

.circle {
  position: absolute;
  width: var(--circle-size);
  height: var(--circle-size);
  top: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  background-color: var(--grid-line-color);

  &:first-child {
    left: 0;

    @include app.retina {
      margin-left: 0.5px;
    }
  }

  &:last-child {
    left: 100%;

    @include app.retina {
      margin-left: -0.5px;
    }
  }
}

/* --------------------------- */
/* Grid Dot */

.dot {
  /*
    CSS variables for inner dot:

    --dot-size
    --dot-color

    CSS variables for outline:

    A single color can be set for the outline using --outline-color.
    Or, each side can be set individually. This is helpful if the outline
    spans across multiple sections with different background colors

    --outline-size
    --outline-color
    --outline-top-right-color
    --outline-bottom-right-color
    --outline-bottom-left-color
    --outline-top-left-color
  */

  --size: calc(
    var(--dot-size, var(--grid-dot-size)) +
      (var(--outline-size, var(--grid-dot-outline-size)) * 2)
  );

  width: var(--size);
  height: var(--size);
  position: relative;
  z-index: 20;

  &:before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background-color: var(--dot-color, var(--grid-dot-color));
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) rotate(45deg);
    border: var(--outline-size, var(--grid-dot-outline-size)) solid;
    border-top-color: var(
      --outline-top-right-color,
      var(--outline-color, var(--page-background-color))
    );
    border-right-color: var(
      --outline-bottom-right-color,
      var(--outline-color, var(--page-background-color))
    );
    border-left-color: var(
      --outline-top-left-color,
      var(--outline-color, var(--page-background-color))
    );
    border-bottom-color: var(
      --outline-bottom-left-color,
      var(--outline-color, var(--page-background-color))
    );
  }
}
